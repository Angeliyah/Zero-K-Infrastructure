@using ZeroKWeb
@using ZkData
@model ZkData.Account

@{
    var db = new ZkDataContext();
    int index = 0;
}

@foreach (var entry in Model.AccountRolesByAccountID.OrderBy(x=>x.RoleType.DisplayOrder)) {
    <span>
        @Html.PrintRoleType(entry.RoleType) of @(entry.RoleType.IsClanOnly ? Html.PrintClan(entry.Clan) : Html.PrintFaction(entry.Faction, false))
    </span>
    @Html.DisplayFor(x => entry)
    <br/>
}

@foreach (var grp in new ZkDataContext().RoleTypes.Where(x => (x.RestrictFactionID == null || x.RestrictFactionID == Global.FactionID) && !x.AccountRoles.Any(y=>y.AccountID == Model.AccountID)).GroupBy(x => x.IsClanOnly)) {
    bool isClan = grp.Key;
    if (isClan != true)
    {
        <span>Possible faction roles: </span>
    }
    else {
        <span>Possible clan roles: </span>
    }
    <small>
        @if (isClan && Global.Clan != null || GlobalConst.PlanetWarsMode != PlanetWarsModes.AllOffline)
        {
            foreach (var role in grp)
            {
                @Html.PrintRoleType(role)

                if (role.IsVoteable && Global.AccountID == Model.AccountID)
                {
                    <a href="@Url.Action("NominateRole", "Poll", new { roleTypeID = role.RoleTypeID })" onclick=" var text = prompt('What is your slogan?', 'vote me!'); $(this).attr('href', $(this).attr('href') + '&text=' + text); ">(nominate)</a>
                }
                if (Global.Account.CanAppoint(Model, role))
                {
                    <a href="@Url.Action("AppointRole", "Planetwars", new { accountID = Model.AccountID, roleTypeID = role.RoleTypeID })">(appoint)</a>
                }
                index++;
                if (index < grp.ToList().Count)
                {
                    <span>,&nbsp;</span>
                }
            }
        }
    </small><br/>
}